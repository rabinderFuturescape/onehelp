import { HelpTopic } from '@/types/help-topics';
import { CannedResponse } from '@/types/canned-responses';
import { Complaint } from '@/types/complaints';
import { Role } from '@/types/escalation';
import { ReportResponse } from '@/types/reports';
import { Ticket } from '@/types/tickets';
import { Comment } from '@/types/comments';

// Mock Roles
export const mockRoles: Role[] = [
  { id: '1', name: 'Admin', description: 'Administrator role' },
  { id: '2', name: 'Manager', description: 'Manager role' },
  { id: '3', name: 'Agent', description: 'Support agent role' },
  { id: '4', name: 'Supervisor', description: 'Supervisor role' },
];

// Mock Help Topics
export const mockHelpTopics: HelpTopic[] = [
  {
    id: '1',
    name: 'Technical Support',
    description: '<p>Technical issues with the application</p>',
    parentId: null,
    autoAssignRoleId: '3',
    priority: 'medium',
    dueHours: 24,
    visibility: 'public',
    status: 'active',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    autoAssignRole: { id: '3', name: 'Agent' },
    parent: null,
  },
  {
    id: '2',
    name: 'Billing Issues',
    description: '<p>Problems with billing or payments</p>',
    parentId: null,
    autoAssignRoleId: '2',
    priority: 'high',
    dueHours: 12,
    visibility: 'public',
    status: 'active',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    autoAssignRole: { id: '2', name: 'Manager' },
    parent: null,
  },
  {
    id: '3',
    name: 'Account Access',
    description: '<p>Issues with logging in or account access</p>',
    parentId: null,
    autoAssignRoleId: '3',
    priority: 'urgent',
    dueHours: 4,
    visibility: 'public',
    status: 'active',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    autoAssignRole: { id: '3', name: 'Agent' },
    parent: null,
  },
  {
    id: '4',
    name: 'Password Reset',
    description: '<p>Help with resetting passwords</p>',
    parentId: '3',
    autoAssignRoleId: '3',
    priority: 'high',
    dueHours: 2,
    visibility: 'public',
    status: 'active',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    autoAssignRole: { id: '3', name: 'Agent' },
    parent: { id: '3', name: 'Account Access' },
  },
];

// Mock Canned Responses
export const mockCannedResponses: CannedResponse[] = [
  {
    id: '1',
    title: 'Welcome Message',
    emailResponse: '<p>Thank you for contacting our support team. We have received your request and will get back to you as soon as possible.</p>',
    smsResponse: 'Thank you for contacting our support team. We have received your request and will get back to you as soon as possible.',
    status: 'active',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: '2',
    title: 'Ticket Resolved',
    emailResponse: '<p>We are pleased to inform you that your ticket has been resolved. If you have any further questions, please do not hesitate to contact us.</p>',
    smsResponse: 'Your ticket has been resolved. If you have any further questions, please contact us.',
    status: 'active',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: '3',
    title: 'Password Reset Instructions',
    emailResponse: '<p>To reset your password, please follow these steps:</p><ol><li>Go to the login page</li><li>Click on "Forgot Password"</li><li>Enter your email address</li><li>Follow the instructions sent to your email</li></ol>',
    smsResponse: 'To reset your password, go to the login page, click "Forgot Password", enter your email, and follow the instructions sent to your email.',
    status: 'active',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
];

// Mock Complaints
export const mockComplaints: Complaint[] = [
  {
    id: '1',
    ticketNumber: 'TKT-001',
    subject: 'Cannot login to my account',
    description: '<p>I am unable to login to my account. I have tried resetting my password but I am still having issues.</p>',
    helpTopicId: '3',
    memberId: '1',
    assignedToId: '3',
    status: 'open',
    priority: 'high',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    helpTopic: { id: '3', name: 'Account Access' },
    member: {
      id: '1',
      name: 'John Doe',
      email: 'john.doe@example.com',
      phone: '123-456-7890',
      unitNumber: 'A101',
    },
    assignedTo: {
      id: '3',
      name: 'Jane Smith',
      email: 'jane.smith@example.com',
    },
    dueDate: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),
    isOverdue: false,
    isEscalated: false,
    attachments: [],
  },
  {
    id: '2',
    ticketNumber: 'TKT-002',
    subject: 'Billing discrepancy on my last invoice',
    description: '<p>I noticed a discrepancy on my last invoice. I was charged for services I did not use.</p>',
    helpTopicId: '2',
    memberId: '2',
    assignedToId: '2',
    status: 'in_progress',
    priority: 'medium',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    helpTopic: { id: '2', name: 'Billing Issues' },
    member: {
      id: '2',
      name: 'Jane Smith',
      email: 'jane.smith@example.com',
      phone: '987-654-3210',
      unitNumber: 'B202',
    },
    assignedTo: {
      id: '2',
      name: 'Mike Johnson',
      email: 'mike.johnson@example.com',
    },
    dueDate: new Date(Date.now() + 12 * 60 * 60 * 1000).toISOString(),
    isOverdue: false,
    isEscalated: false,
    attachments: [],
  },
  {
    id: '3',
    ticketNumber: 'TKT-003',
    subject: 'Application crashes on startup',
    description: '<p>The application crashes every time I try to start it. I have tried reinstalling but the issue persists.</p>',
    helpTopicId: '1',
    memberId: '3',
    assignedToId: '3',
    status: 'open',
    priority: 'urgent',
    createdAt: new Date(Date.now() - 48 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),
    helpTopic: { id: '1', name: 'Technical Support' },
    member: {
      id: '3',
      name: 'Bob Johnson',
      email: 'bob.johnson@example.com',
      phone: '555-123-4567',
      unitNumber: 'C303',
    },
    assignedTo: {
      id: '3',
      name: 'Jane Smith',
      email: 'jane.smith@example.com',
    },
    dueDate: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),
    isOverdue: true,
    isEscalated: true,
    attachments: [
      {
        id: '1',
        fileName: 'error_log.txt',
        fileSize: 1024,
        fileType: 'text/plain',
        url: '#',
      },
    ],
  },
];

// Mock Tickets (using the same data as complaints for simplicity)
export const mockTickets: Ticket[] = [
  {
    id: '1',
    ticketNumber: 'TKT-001',
    subject: 'Cannot login to my account',
    description: '<p>I am unable to login to my account. I have tried resetting my password but I am still having issues.</p>',
    helpTopicId: '3',
    memberId: '1',
    assignedToId: '3',
    status: 'open',
    priority: 'high',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    helpTopic: { id: '3', name: 'Account Access' },
    member: {
      id: '1',
      name: 'John Doe',
      email: 'john.doe@example.com',
      phone: '123-456-7890',
      unitNumber: 'A101',
    },
    assignedTo: {
      id: '3',
      name: 'Jane Smith',
      email: 'jane.smith@example.com',
    },
    dueDate: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),
    isOverdue: false,
    isEscalated: false,
    attachments: [],
  },
  {
    id: '2',
    ticketNumber: 'TKT-002',
    subject: 'Billing discrepancy on my last invoice',
    description: '<p>I noticed a discrepancy on my last invoice. I was charged for services I did not use.</p>',
    helpTopicId: '2',
    memberId: '2',
    assignedToId: '2',
    status: 'in_progress',
    priority: 'medium',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    helpTopic: { id: '2', name: 'Billing Issues' },
    member: {
      id: '2',
      name: 'Jane Smith',
      email: 'jane.smith@example.com',
      phone: '987-654-3210',
      unitNumber: 'B202',
    },
    assignedTo: {
      id: '2',
      name: 'Mike Johnson',
      email: 'mike.johnson@example.com',
    },
    dueDate: new Date(Date.now() + 12 * 60 * 60 * 1000).toISOString(),
    isOverdue: false,
    isEscalated: false,
    attachments: [],
  },
  {
    id: '3',
    ticketNumber: 'TKT-003',
    subject: 'Application crashes on startup',
    description: '<p>The application crashes every time I try to start it. I have tried reinstalling but the issue persists.</p>',
    helpTopicId: '1',
    memberId: '3',
    assignedToId: '3',
    status: 'open',
    priority: 'urgent',
    createdAt: new Date(Date.now() - 48 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),
    helpTopic: { id: '1', name: 'Technical Support' },
    member: {
      id: '3',
      name: 'Bob Johnson',
      email: 'bob.johnson@example.com',
      phone: '555-123-4567',
      unitNumber: 'C303',
    },
    assignedTo: {
      id: '3',
      name: 'Jane Smith',
      email: 'jane.smith@example.com',
    },
    dueDate: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),
    isOverdue: true,
    isEscalated: true,
    attachments: [
      {
        id: '1',
        fileName: 'error_log.txt',
        fileSize: 1024,
        fileType: 'text/plain',
        url: '#',
      },
    ],
  },
  {
    id: '4',
    ticketNumber: 'TKT-004',
    subject: 'Need help with password reset',
    description: '<p>I forgot my password and need help resetting it. The reset link is not being sent to my email.</p>',
    helpTopicId: '4',
    memberId: '4',
    assignedToId: '3',
    status: 'resolved',
    priority: 'medium',
    createdAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    helpTopic: { id: '4', name: 'Password Reset' },
    member: {
      id: '4',
      name: 'Alice Williams',
      email: 'alice.williams@example.com',
      phone: '555-987-6543',
      unitNumber: 'D404',
    },
    assignedTo: {
      id: '3',
      name: 'Jane Smith',
      email: 'jane.smith@example.com',
    },
    dueDate: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000).toISOString(),
    isOverdue: false,
    isEscalated: false,
    attachments: [],
  },
  {
    id: '5',
    ticketNumber: 'TKT-005',
    subject: 'Feature request: Dark mode',
    description: '<p>I would like to request a dark mode feature for the application. It would be easier on the eyes when using the app at night.</p>',
    helpTopicId: '1',
    memberId: '1',
    assignedToId: '2',
    status: 'in_progress',
    priority: 'low',
    createdAt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(),
    helpTopic: { id: '1', name: 'Technical Support' },
    member: {
      id: '1',
      name: 'John Doe',
      email: 'john.doe@example.com',
      phone: '123-456-7890',
      unitNumber: 'A101',
    },
    assignedTo: {
      id: '2',
      name: 'Mike Johnson',
      email: 'mike.johnson@example.com',
    },
    dueDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),
    isOverdue: false,
    isEscalated: false,
    attachments: [],
  },
];

// Mock Report
export const mockReport: ReportResponse = {
  complaints: mockComplaints,
  summary: {
    total: mockComplaints.length,
    open: mockComplaints.filter(c => c.status === 'open').length,
    inProgress: mockComplaints.filter(c => c.status === 'in_progress').length,
    resolved: mockComplaints.filter(c => c.status === 'resolved').length,
    closed: mockComplaints.filter(c => c.status === 'closed').length,
    reopened: mockComplaints.filter(c => c.status === 'reopened').length,
    overdue: mockComplaints.filter(c => c.isOverdue).length,
    escalated: mockComplaints.filter(c => c.isEscalated).length,
  },
};

// Mock Members
export const mockMembers = [
  {
    id: '1',
    name: 'John Doe',
    email: 'john.doe@example.com',
    phone: '123-456-7890',
    unitNumber: 'A101',
  },
  {
    id: '2',
    name: 'Jane Smith',
    email: 'jane.smith@example.com',
    phone: '987-654-3210',
    unitNumber: 'B202',
  },
  {
    id: '3',
    name: 'Bob Johnson',
    email: 'bob.johnson@example.com',
    phone: '555-123-4567',
    unitNumber: 'C303',
  },
  {
    id: '4',
    name: 'Alice Williams',
    email: 'alice.williams@example.com',
    phone: '555-987-6543',
    unitNumber: 'D404',
  },
];

// Mock Escalation Rules
export const mockEscalationRules = [
  {
    id: '1',
    name: 'Technical Support Escalation',
    description: 'Escalation rule for technical support tickets',
    priority: 'high',
    timeThresholdMinutes: 120,
    tiers: [
      {
        id: '1',
        level: 1,
        assigneeRoleId: '3',
        slaHours: 4,
      },
      {
        id: '2',
        level: 2,
        assigneeRoleId: '4',
        slaHours: 8,
      },
      {
        id: '3',
        level: 3,
        assigneeRoleId: '2',
        slaHours: 24,
      },
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: '2',
    name: 'Billing Issues Escalation',
    description: 'Escalation rule for billing related tickets',
    priority: 'medium',
    timeThresholdMinutes: 240,
    tiers: [
      {
        id: '4',
        level: 1,
        assigneeRoleId: '3',
        slaHours: 8,
      },
      {
        id: '5',
        level: 2,
        assigneeRoleId: '2',
        slaHours: 24,
      },
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
];

// Mock Comments
export const mockComments: Comment[] = [
  {
    id: '1',
    ticketId: '1',
    userId: 'agent-1',
    content: '<p>I\'ve looked into your account and I can see that there might be an issue with your credentials. Could you please try clearing your browser cache and cookies, then try logging in again?</p>',
    isInternal: false,
    createdAt: new Date(Date.now() - 23 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 23 * 60 * 60 * 1000).toISOString(),
    user: {
      id: 'agent-1',
      name: 'Jane Smith',
      email: 'jane.smith@example.com',
      avatar: 'https://ui-avatars.com/api/?name=Jane+Smith',
      role: 'agent',
    },
    attachments: [],
  },
  {
    id: '2',
    ticketId: '1',
    userId: 'customer-1',
    content: '<p>I tried clearing my cache and cookies but I\'m still having the same issue. I get an error message saying "Invalid credentials" even though I\'m sure my password is correct.</p>',
    isInternal: false,
    createdAt: new Date(Date.now() - 22 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 22 * 60 * 60 * 1000).toISOString(),
    user: {
      id: 'customer-1',
      name: 'John Doe',
      email: 'john.doe@example.com',
      avatar: 'https://ui-avatars.com/api/?name=John+Doe',
      role: 'customer',
    },
    attachments: [
      {
        id: '1',
        fileName: 'error_screenshot.png',
        fileSize: 256000,
        fileType: 'image/png',
        url: '#',
      },
    ],
  },
  {
    id: '3',
    ticketId: '1',
    userId: 'agent-1',
    content: '<p>Let me escalate this to our technical team for further investigation. They will look into your account settings.</p>',
    isInternal: false,
    createdAt: new Date(Date.now() - 20 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 20 * 60 * 60 * 1000).toISOString(),
    user: {
      id: 'agent-1',
      name: 'Jane Smith',
      email: 'jane.smith@example.com',
      avatar: 'https://ui-avatars.com/api/?name=Jane+Smith',
      role: 'agent',
    },
    attachments: [],
  },
  {
    id: '4',
    ticketId: '1',
    userId: 'agent-1',
    content: '<p>I\'ve checked with the technical team and it appears there might be an issue with your account permissions. Let\'s try resetting your account.</p>',
    isInternal: true,
    createdAt: new Date(Date.now() - 18 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 18 * 60 * 60 * 1000).toISOString(),
    user: {
      id: 'agent-1',
      name: 'Jane Smith',
      email: 'jane.smith@example.com',
      avatar: 'https://ui-avatars.com/api/?name=Jane+Smith',
      role: 'agent',
    },
    attachments: [],
  },
  {
    id: '5',
    ticketId: '2',
    userId: 'agent-2',
    content: '<p>I\'ve reviewed your billing statement and I can see the discrepancy you mentioned. We\'ll need to investigate this further with our billing department.</p>',
    isInternal: false,
    createdAt: new Date(Date.now() - 10 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 10 * 60 * 60 * 1000).toISOString(),
    user: {
      id: 'agent-2',
      name: 'Mike Johnson',
      email: 'mike.johnson@example.com',
      avatar: 'https://ui-avatars.com/api/?name=Mike+Johnson',
      role: 'manager',
    },
    attachments: [],
  },
  {
    id: '6',
    ticketId: '3',
    userId: 'agent-1',
    content: '<p>I\'ve reviewed the error logs you sent. It seems there might be a compatibility issue with your operating system. Could you please let me know which OS version you\'re using?</p>',
    isInternal: false,
    createdAt: new Date(Date.now() - 36 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 36 * 60 * 60 * 1000).toISOString(),
    user: {
      id: 'agent-1',
      name: 'Jane Smith',
      email: 'jane.smith@example.com',
      avatar: 'https://ui-avatars.com/api/?name=Jane+Smith',
      role: 'agent',
    },
    attachments: [],
  },
  {
    id: '7',
    ticketId: '3',
    userId: 'customer-3',
    content: '<p>I\'m using Windows 11, version 22H2. I\'ve also tried running the application in compatibility mode but it still crashes.</p>',
    isInternal: false,
    createdAt: new Date(Date.now() - 30 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 30 * 60 * 60 * 1000).toISOString(),
    user: {
      id: 'customer-3',
      name: 'Bob Johnson',
      email: 'bob.johnson@example.com',
      avatar: 'https://ui-avatars.com/api/?name=Bob+Johnson',
      role: 'customer',
    },
    attachments: [],
  },
];

// Mock Auth Store
export const mockAuthStore = {
  isAuthenticated: true,
  user: {
    id: '1',
    name: 'Admin User',
    email: 'admin@example.com',
    role: 'admin',
  },
  login: () => {},
  logout: () => {},
};
